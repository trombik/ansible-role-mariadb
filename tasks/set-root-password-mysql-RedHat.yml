---

- name: See if /root/.my.cnf exists
  stat:
    path: /root/.my.cnf
  register: __stat_root_my_cnf

- name: Set fact if we need to set password
  set_fact:
    mariadb_set_password_required: "{{ not __stat_root_my_cnf.stat.exists }}"

- name: Get root password
  shell: "grep 'A temporary password is generated for root@localhost:' /var/log/mysqld.log | sed -e 's/.*A temporary password is generated for root@localhost: //'"
  register: __sed_var_log_mysqld_log
  changed_when: false
  when: mariadb_set_password_required

- name: Set mariadb_default_password
  set_fact:
    mariadb_default_password: "{{ __sed_var_log_mysqld_log.stdout | trim }}"
  when: mariadb_set_password_required

- name: Create /root/.my.cnf to chnage the password
  template:
    src: root.my.cnf.j2
    dest: /root/.my.cnf
    mode: 0600
  when: mariadb_set_password_required

- name: Set root password
  command:
    # XXX you cannot use mysql_user ansible module here because it does not
    # support expired password. neither mysqladmin.
    cmd: "mysql -uroot --batch -s --connect-expired-password -e \"ALTER USER 'root'@'localhost' IDENTIFIED BY '{{ mariadb_root_password }}'; FLUSH PRIVILEGES;\""
    stdin: /dev/null
  environment:
    MYSQL_PWD: "{{ mariadb_default_password }}"
  when: mariadb_set_password_required

- name: Create /root/.my.cnf
  template:
    src: user.my.cnf.j2
    dest: /root/.my.cnf
    mode: 0600
  with_items: "[ {{ mariadb_root_conf }} ]"
