---

- name: Get root password
  set_fact:
    # XXX when lookup cannot find the file, it returns None.
    mariadb_default_password: "{{ lookup('file', '/root/.mysql_secret', errors='ignore') | regex_replace('^#.*', '') | trim }}"

- name: Set mariadb_default_password_x
  set_fact:
    # XXX The jinja2 'None' maddness. when a variable is None, and is
    # evaluated in a condition, it becomes "", or an empty string. it seems to
    # me that there is no way to test a variable is None.
    #
    # https://github.com/ansible/ansible/issues/57438
    #
    # and when you assign None variable to another variable, it becomes "None"
    # string.
    mariadb_default_password_x: "x{{ mariadb_default_password }}"

- name: Create /root/.my.cnf to chnage the password
  template:
    src: root.my.cnf.j2
    dest: /root/.my.cnf
    mode: 0600
  when:
    - mariadb_default_password_x != "xNone"

- name: Set root password
  command:
    # XXX you cannot use mysql_user ansible module here because it does not
    # support expired password. neither mysqladmin.
    cmd: "mysql -uroot --batch -s --connect-expired-password -e \"ALTER USER 'root'@'localhost' IDENTIFIED BY '{{ mariadb_root_password }}';\""
    stdin: /dev/null
  environment:
    MYSQL_PWD: "{{ mariadb_default_password }}"
  when:
    - mariadb_default_password_x != "xNone"

- name: Create /root/.my.cnf
  template:
    src: user.my.cnf.j2
    dest: /root/.my.cnf
    mode: 0600
  with_items: "[ {{ mariadb_root_conf }} ]"

- name: Delete /root/.mysql_secret
  file:
    path: /root/.mysql_secret
    state: absent
